name: Tests for pyrkm

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
  workflow_dispatch:

jobs:
  Build-n-test:

    if: github.event.pull_request.draft == false
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ['ubuntu-latest', 'macos-latest']
        python-version: ['3.12']
        gcc-version: ['12']

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'true'

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - uses: actions/cache@v3
      id: cache-virtualenv
      with:
        path: ${{ env.pythonLocation }}
        key: ${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml') }}-${{ matrix.os }}-${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -e .[develop]

    - name: Clean Pytest Cache
      run: rm -rf .pytest_cache

    - name: Test with pytest and coverage
      run: |
          python -m coverage run -p -m pytest

    - name: Combine
      run: |
        python -m coverage combine

    - name: Report coverage
      run: |
        python -m coverage json
        export TOTAL=$(python -c "import json;print(json.load(open('coverage.json'))['totals']['percent_covered_display'])")
        echo "total=$TOTAL" >> $GITHUB_ENV
        echo "### Total coverage: ${TOTAL}%" >> $GITHUB_STEP_SUMMARY
        echo $'\n```' >> $GITHUB_STEP_SUMMARY
        python -m coverage report >> $GITHUB_STEP_SUMMARY
        echo $'\n```' >> $GITHUB_STEP_SUMMARY

    - name: Make coverage badge
      if: github.ref == 'refs/heads/main' && matrix.os == 'ubuntu-latest'
      uses: schneegans/dynamic-badges-action@v1.7.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: 07cc3e145e56231a59fde8156485519b
        filename: coverage_pyrkm.json
        label: Coverage
        message: ${{ env.total }}%
        minColorRange: 50
        maxColorRange: 90
        valColorRange: ${{ env.total }}
